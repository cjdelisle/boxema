'use strict';
const Ema = require('./index');

const VALUES = [
    22.27, 22.19, 22.08, 22.17, 22.18, 22.13,
    22.23, 22.43, 22.24, 22.29, 22.15, 22.39,
    22.38, 22.61, 23.36, 24.05, 23.75, 23.83,
    23.95, 23.63, 23.82, 23.87, 23.65, 23.19,
    23.10, 23.33, 22.68, 23.10, 22.40, 22.17,
    0, 0, 0, 0, 0, 0
];

// See generator.py for making the golds
const TESTS = {
    ema10: {
        period: 10,
        values: VALUES,
        expected: [
            1.28434452942, 2.71501031108, 4.30746273696, 6.09224912487,
            8.08735866208, 10.3140480386, 12.8081830281, 15.6069607409,
            18.7236906172, 22.2095792615, 22.1955580914, 22.2077455751,
            22.2400595692, 22.2736683689, 22.3527285703, 22.4896327238,
            22.6078052151, 22.7094408325, 22.8632273642, 23.0078723337,
            23.2050001133, 23.3861320025, 23.5776145163, 23.724777149,
            23.7526508272, 23.6761831421, 23.6057997379, 23.5373517296
        ]
    },
    ema8: {
        period: 8,
        values: VALUES,
        expected: [
            1.60128707009, 3.44272351485, 5.55903077199, 8.00680004161,
            10.8311800199, 14.0856907288, 17.8471706907, 22.200662969,
            22.1878581284, 22.1947195445, 22.2173696836, 22.2404627405,
            22.2641283661, 22.3192393845, 22.4141941885, 22.5282503572,
            22.6810895441, 22.85187833, 23.089088259, 23.2856038682,
            23.528213711, 23.7598173856, 23.8420673049, 23.7482992613,
            23.7013009254, 23.6455855897, 23.5075209683, 23.450603713
        ]
    }
};

Object.keys(TESTS).forEach((name) => {
    const data = TESTS[name];
    const ema = Ema.create(data.period);
    let err = false;
    for (let i = 0; i < data.values.length; i++) {
        const res = ema.update(data.values[i]);
        if (data.expected[i] - res > 0.0001) {
            console.log(data.expected[i] + ' != ' + res);
            err = true;
        }
    }
    if (err) { throw new Error("failed test " + name); }
});
